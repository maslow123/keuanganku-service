// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: transactions/pb/balance.proto

package pb

import (
	context "context"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpsertBalanceRequest_ActionType int32

const (
	UpsertBalanceRequest_INCREASE UpsertBalanceRequest_ActionType = 0
	UpsertBalanceRequest_DECREASE UpsertBalanceRequest_ActionType = 1
)

// Enum value maps for UpsertBalanceRequest_ActionType.
var (
	UpsertBalanceRequest_ActionType_name = map[int32]string{
		0: "INCREASE",
		1: "DECREASE",
	}
	UpsertBalanceRequest_ActionType_value = map[string]int32{
		"INCREASE": 0,
		"DECREASE": 1,
	}
)

func (x UpsertBalanceRequest_ActionType) Enum() *UpsertBalanceRequest_ActionType {
	p := new(UpsertBalanceRequest_ActionType)
	*p = x
	return p
}

func (x UpsertBalanceRequest_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpsertBalanceRequest_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_transactions_pb_balance_proto_enumTypes[0].Descriptor()
}

func (UpsertBalanceRequest_ActionType) Type() protoreflect.EnumType {
	return &file_transactions_pb_balance_proto_enumTypes[0]
}

func (x UpsertBalanceRequest_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpsertBalanceRequest_ActionType.Descriptor instead.
func (UpsertBalanceRequest_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_transactions_pb_balance_proto_rawDescGZIP(), []int{1, 0}
}

type Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    int32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type      int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Total     int32 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	CreatedAt int32 `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int32 `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Balance) Reset() {
	*x = Balance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_pb_balance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_pb_balance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_transactions_pb_balance_proto_rawDescGZIP(), []int{0}
}

func (x *Balance) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Balance) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Balance) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Balance) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Balance) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Balance) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type UpsertBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32                           `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type   int32                           `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Total  int32                           `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Action UpsertBalanceRequest_ActionType `protobuf:"varint,4,opt,name=action,proto3,enum=balance.UpsertBalanceRequest_ActionType" json:"action,omitempty"`
}

func (x *UpsertBalanceRequest) Reset() {
	*x = UpsertBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_pb_balance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertBalanceRequest) ProtoMessage() {}

func (x *UpsertBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_pb_balance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertBalanceRequest.ProtoReflect.Descriptor instead.
func (*UpsertBalanceRequest) Descriptor() ([]byte, []int) {
	return file_transactions_pb_balance_proto_rawDescGZIP(), []int{1}
}

func (x *UpsertBalanceRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpsertBalanceRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpsertBalanceRequest) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UpsertBalanceRequest) GetAction() UpsertBalanceRequest_ActionType {
	if x != nil {
		return x.Action
	}
	return UpsertBalanceRequest_INCREASE
}

type UpsertBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status         int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error          string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Id             int32  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	CurrentBalance int32  `protobuf:"varint,4,opt,name=current_balance,json=currentBalance,proto3" json:"current_balance,omitempty"`
}

func (x *UpsertBalanceResponse) Reset() {
	*x = UpsertBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_pb_balance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertBalanceResponse) ProtoMessage() {}

func (x *UpsertBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_pb_balance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertBalanceResponse.ProtoReflect.Descriptor instead.
func (*UpsertBalanceResponse) Descriptor() ([]byte, []int) {
	return file_transactions_pb_balance_proto_rawDescGZIP(), []int{2}
}

func (x *UpsertBalanceResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpsertBalanceResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *UpsertBalanceResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpsertBalanceResponse) GetCurrentBalance() int32 {
	if x != nil {
		return x.CurrentBalance
	}
	return 0
}

var File_transactions_pb_balance_proto protoreflect.FileDescriptor

var file_transactions_pb_balance_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x70,
	0x62, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x0a, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x01, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x2d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x0e, 0xea, 0xde, 0x1f, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x2d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x0e, 0xea, 0xde, 0x1f, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd2,
	0x01, 0x0a, 0x14, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x40, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x0a, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x43, 0x52, 0x45,
	0x41, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x43, 0x52, 0x45, 0x41, 0x53,
	0x45, 0x10, 0x01, 0x22, 0x93, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x0f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x13, 0xea, 0xde, 0x1f, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x32, 0x62, 0x0a, 0x0e, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x55,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x17, 0x5a,
	0x15, 0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transactions_pb_balance_proto_rawDescOnce sync.Once
	file_transactions_pb_balance_proto_rawDescData = file_transactions_pb_balance_proto_rawDesc
)

func file_transactions_pb_balance_proto_rawDescGZIP() []byte {
	file_transactions_pb_balance_proto_rawDescOnce.Do(func() {
		file_transactions_pb_balance_proto_rawDescData = protoimpl.X.CompressGZIP(file_transactions_pb_balance_proto_rawDescData)
	})
	return file_transactions_pb_balance_proto_rawDescData
}

var file_transactions_pb_balance_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_transactions_pb_balance_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_transactions_pb_balance_proto_goTypes = []interface{}{
	(UpsertBalanceRequest_ActionType)(0), // 0: balance.UpsertBalanceRequest.ActionType
	(*Balance)(nil),                      // 1: balance.Balance
	(*UpsertBalanceRequest)(nil),         // 2: balance.UpsertBalanceRequest
	(*UpsertBalanceResponse)(nil),        // 3: balance.UpsertBalanceResponse
}
var file_transactions_pb_balance_proto_depIdxs = []int32{
	0, // 0: balance.UpsertBalanceRequest.action:type_name -> balance.UpsertBalanceRequest.ActionType
	2, // 1: balance.BalanceService.UpsertBalance:input_type -> balance.UpsertBalanceRequest
	3, // 2: balance.BalanceService.UpsertBalance:output_type -> balance.UpsertBalanceResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_transactions_pb_balance_proto_init() }
func file_transactions_pb_balance_proto_init() {
	if File_transactions_pb_balance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transactions_pb_balance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_pb_balance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_pb_balance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transactions_pb_balance_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transactions_pb_balance_proto_goTypes,
		DependencyIndexes: file_transactions_pb_balance_proto_depIdxs,
		EnumInfos:         file_transactions_pb_balance_proto_enumTypes,
		MessageInfos:      file_transactions_pb_balance_proto_msgTypes,
	}.Build()
	File_transactions_pb_balance_proto = out.File
	file_transactions_pb_balance_proto_rawDesc = nil
	file_transactions_pb_balance_proto_goTypes = nil
	file_transactions_pb_balance_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BalanceServiceClient is the client API for BalanceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BalanceServiceClient interface {
	UpsertBalance(ctx context.Context, in *UpsertBalanceRequest, opts ...grpc.CallOption) (*UpsertBalanceResponse, error)
}

type balanceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBalanceServiceClient(cc grpc.ClientConnInterface) BalanceServiceClient {
	return &balanceServiceClient{cc}
}

func (c *balanceServiceClient) UpsertBalance(ctx context.Context, in *UpsertBalanceRequest, opts ...grpc.CallOption) (*UpsertBalanceResponse, error) {
	out := new(UpsertBalanceResponse)
	err := c.cc.Invoke(ctx, "/balance.BalanceService/UpsertBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BalanceServiceServer is the server API for BalanceService service.
type BalanceServiceServer interface {
	UpsertBalance(context.Context, *UpsertBalanceRequest) (*UpsertBalanceResponse, error)
}

// UnimplementedBalanceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBalanceServiceServer struct {
}

func (*UnimplementedBalanceServiceServer) UpsertBalance(context.Context, *UpsertBalanceRequest) (*UpsertBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertBalance not implemented")
}

func RegisterBalanceServiceServer(s *grpc.Server, srv BalanceServiceServer) {
	s.RegisterService(&_BalanceService_serviceDesc, srv)
}

func _BalanceService_UpsertBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BalanceServiceServer).UpsertBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/balance.BalanceService/UpsertBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BalanceServiceServer).UpsertBalance(ctx, req.(*UpsertBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BalanceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "balance.BalanceService",
	HandlerType: (*BalanceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpsertBalance",
			Handler:    _BalanceService_UpsertBalance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transactions/pb/balance.proto",
}
